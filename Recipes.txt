# ------Global Variables----------

# Game Board
board = ["-", "-", "-",
         "-", "-", "-",
         "-", "-", "-"]

game_still_going = True

# Who won? or tie ?
winner = None

# Who's turn
current_player = "X"


#Display Board
def display_board():
    print(board[0] + " | " + board[1] + " | " + board[2])
    print(board[3] + " |"
                     "6 " + board[4] + " | " + board[5])
    print(board[6] + " | " + board[7] + " | " + board[8])

#Play a TicTacToe Game
def play_game():
    #Diplay initial board
    display_board()

    #While the game is still going
    while game_still_going:


        #Handle a single turn of an arbitrary player
        handle_turn(current_player)

        #check if the game has ended
        check_if_game_over()

        #Flip to the enter player
        flip_player()

        #The game has ended
        if winner == "X" or winner == "O":
            print(winner + "won.")
        elif winner == None:
            print("Tie.")



#Handle a single turn of an arbitrary player
def handle_turn(player):
    position = input("Choose a position from 1 to 9\n")
    position = int(position)

    board[position - 1] = "X"

    display_board()

def check_if_game_over():
    check_for_winner()
    check_if_tie()

def check_for_winner():
    #Set up global variables
    global winner

    #check roes
    row_winner = check_rows()
    #check colums
    colum_winner = check_colums()
    # check diagonals
    diagonal_winner =check_diagonals()
    if row_winner:
        winner = row_winner
    elif colum_winner:
        winner = colum_winner
    elif diagonal_winner:
        winner = diagonal_winner
    else:
        #there is no win
        winner = None
    return

def check_rows():
    #Set up global variables
    global game_still_going
    #check if any rows have all the same values
    #and it is not empty
    row_1 = board[0] == board[1] == board[2] != "-"
    row_2 = board[3] == board[4] == board[5] != "-"
    row_3 = board[6] == board[7] == board[8] != "-"
    #if there is a row match , the game stop
    if row_1 or row_2 or row_3
        game_still_going = False
    #Return the winner
    if row_1:
        return board[0]
    elif row_2:
        return board[3]
    elif row_3:
        return bord[6]
    return

    return

def check_colums():
    # Set up global variables
    global game_still_going
    # check if any colums have all the same values
    # and it is not empty
    colum_1 = board[0] == board[3] == board[6] != "-"
    colum_2 = board[1] == board[4] == board[7] != "-"
    colum_3 = board[2] == board[5] == board[8] != "-"
    # if there is a colum match , the game stop
    if colum_1 or colum_2 or colum_3
        game_still_going = False
    # Return the winner
    if colum_1:
        return board[0]
    elif colum_2:
        return board[1]
    elif colum_3:
        return board[2]
    return

def check_diagonals():
    # Set up global variables
    global game_still_going
    # check if any rows have all the same values
    # and it is not empty
    row_1 = board[0] == board[1] == board[2] != "-"
    row_2 = board[3] == board[4] == board[5] != "-"
    row_3 = board[6] == board[7] == board[8] != "-"
    # if there is a row match , the game stop
    if row_1 or row_2 or row_3
        game_still_going = False
    # Return the winner
    if row_1:
        return board[0]
    elif row_2:
        return board[3]
    elif row_3:
        return bord[6]
    return
    return

def check_if_tie():
    return

def flip_player():
    return


play_game()


#play_game()



# board
# display board
# play game
# handle turn
# check win
    #check rows
    # check colums
    # ckeck diagonals
# check tie
# flip player


